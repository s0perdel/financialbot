from typing import Union
from aiogram import types
from aiogram.dispatcher import FSMContext
import aiogram.utils.markdown as fmt
from src.states import MainMenu


class Start:
    def __init__(self, db):
        self.db = db

    async def start_menu(self, unit: Union[types.Message, types.CallbackQuery], state: FSMContext):
        await state.finish()
        if not self.db.check_user(unit.from_user):
            self.db.create_user(unit.from_user)
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        buttons = [
            types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É üí∞', callback_data='add_spending'),
            types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–±—ã–ª—å ü§ë', callback_data='add_profit'),
            types.InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üë®‚Äçüíª', callback_data='stats'),
            types.InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô', callback_data='settings')
        ]
        keyboard.add(*buttons)
        msg = fmt.text(
                fmt.text(f'–ü—Ä–∏–≤–µ—Ç, {unit.from_user.first_name}!'),
                fmt.text('–Ø ', fmt.hbold('–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ü–æ–º–æ–≥–∞—Ç–æ—Ä'), 'üí∏'),
                fmt.text('–ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ç–≤–æ–∏–º–∏ ', fmt.hunderline('—Ç—Ä–∞—Ç–∞–º–∏ –∏ –ø—Ä–∏–±—ã–ª—å—é.\n')),
                fmt.text('–¢—ã –º–æ–∂–µ—à—å –≤–Ω–æ—Å–∏—Ç—å —Å–≤–æ–∏ —Ç—Ä–∞—Ç—ã –∏ –ø—Ä–∏–±—ã–ª—å –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, –ø–æ–ª—É—á–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –ø–µ—Ä–∏–æ–¥',
                         '–∏ –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ –º–Ω–æ–≥–æ –º–Ω–æ–≥–æ –ø—Ä–æ—á–µ–≥–æ.'),
                sep='\n'
            )
        if isinstance(unit, types.Message):
            await unit.answer(msg, parse_mode='HTML', reply_markup=keyboard)
        else:
            await unit.message.edit_text(msg, parse_mode='HTML', reply_markup=keyboard)
        await state.set_state(MainMenu.anti_input)

    async def anti_input(self, message: types.Message):
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É! üò¨')
